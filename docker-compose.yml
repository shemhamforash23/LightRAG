services:
  postgres:
    build:
      context: ./docker/postgres
      dockerfile: Dockerfile
    container_name: lightrag-postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
      POSTGRES_DB: ${POSTGRES_DB:-lightrag}
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  dozerdb:
    image: graphstack/dozerdb:latest
    container_name: lightrag-dozerdb
    environment:
      NEO4J_AUTH: ${NEO4J_USER:-neo4j}/${NEO4J_PASSWORD:-password}
      NEO4J_ACCEPT_LICENSE_AGREEMENT: yes
      NEO4J_PLUGINS: '["apoc"]'
      NEO4J_apoc_export_file_enabled: "true"
      NEO4J_apoc_import_file_enabled: "true"
      NEO4J_apoc_import_file_useneo4jconfig: "true"
      NEO4J_dbms_security_procedures_unrestricted: "apoc.*"
      NEO4J_dbms_security_procedures_allowlist: "apoc.*"
    ports:
      - "${NEO4J_HTTP_PORT:-7474}:7474"
      - "${NEO4J_BOLT_PORT:-7687}:7687"
    volumes:
      - dozerdb-data:/data
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:7474"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  lightrag:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: lightrag-app
    ports:
      - "${LIGHTRAG_PORT:-9621}:9621"
    volumes:
      - ./.env:/app/.env
      - ./lightrag:/app/lightrag
      - ./inputs:/app/data/inputs
      - lightrag-storage:/app/data/rag_storage
    depends_on:
      postgres:
        condition: service_healthy
      dozerdb:
        condition: service_healthy
    restart: unless-stopped

volumes:
  postgres-data:
  dozerdb-data:
  lightrag-storage:
